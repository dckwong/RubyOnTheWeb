require 'jumpstart_auth'
require 'bitly'

class MicroBlogger
	attr_reader :client

	def initialize
		puts "Initializing MicroBlogger"
		@client = JumpstartAuth.twitter
	end

	def tweet(message)
		if message.length <= 140
			@client.update(message)
		else
			puts "Message is too long"
		end
	end

	def followers_list
		@client.followers.each do |follower|
			screen_names << @client.user(follower).screen_name
		end
		screen_names
	end

	def everyones_last_tweet
		friends = @client.friends
		friends.sort_by!{|friend| friend.screen_name.downcase}
		friends.each do |friend|
			status = friend.status
			timestamp = status.created_at
			time_format = timestamp.strftime("%A, %b, %d")
			puts "#{friend.screen_name} said this at #{time_format}"
			puts "#{status.text}"
		end
	end


	def spam_my_followers message
		followers = followers_list
		followers.each do |follower|
			dm(follower,message)
		end
	end
	
	def dm(target,message)
		puts "Trying to send #{target} this direct message!"
		puts message
		if followers_list.include? target
			message = "d @#{target} #{message}"
			tweet(message)
		else
			puts "#{target} is not following you!"
		end
	end

	def run
		puts "Welcome to the JSL Twitter Client!"
		command = ""
		while command != "q"
			printf "Enter command: "
			input = gets.chomp
			parts = input.split(" ")
			command = parts[0]
			case command
			when 'q' then puts "Goodbye!"
			when 't' then tweet(parts[1..-1])
			when "dm" then dm(parts[1], parts[2..-1].join(" "))
			when "spam" then spam_my_followers(parts[1..-1].join(" "))
			when "elt" then everyones_last_tweet
			when "s" then shorten(parts[1..-1].join(""))
			when "turl" then tweet(parts[1..-2].join(" ")+ " "+ shorten(parts[-1]))	
			else
				puts "Sorry, I dont know how to #{command}"
			end
		end
	end

	def shorten(original_url)
		Bitly.use_api_version_3
		bitly = Bitly.new('hungryacademy', 'R_430e9f62250186d2612cca76eee2dbc6')
		puts "Shortening this URL: #{original_url}"
		bitly.shorten(original_url)
	end


end

blogger = MicroBlogger.new
blogger.run